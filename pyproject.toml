[build-system]
requires      = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "cubecoders_amp_api_wrapper" # cc-ampapi
dynamic = ["version"]
authors = [
    { name = "k8thekat", email = "Cadwalladerkatelynn+AMPAPI@gmail.com" },
]
description = "A Python wrapper for the AMP API by CubeCoders"
readme = { file = "README", content-type = "text/markdown" }
requires-python = ">=3.10.0"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: AsyncIO",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[project.urls]
GitHub    = "https://github.com/k8thekat/AMPAPI_Python"
Changelog = "https://github.com/k8thekat/AMPAPI_Python/blob/master/CHANGELOG.md"

[tool.setuptools.dynamic]
dependencies = { file = "requirements.txt" }

[tool.setuptools]
packages             = ["ampapi"]
include-package-data = true

[tool.ruff]
target-version = "py310"
line-length    = 125

[tool.ruff.lint]
exclude = ["docs/extensions/*.py"]
select = [
    "A",
    "C4",
    "F",
    "G",
    "I",
    "PTH",
    "RUF",
    "SIM",
    "TCH",
    "UP",
    "W",
    "PERF",
    "ANN",
]
ignore = [
    "F401",
    "F402",
    "F403",
    "F405",
    "PERF203",
    "RUF001",
    "RUF009",
    "SIM105",
    "UP034",
    "UP038",
    "UP007",
    "ANN101",
    "ANN102",
    "ANN401",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false
combine-as-imports      = true

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses    = false
mark-parentheses       = false
parametrize-names-type = "tuple"

[tool.pyright]
useLibraryCodeForTypes           = true
typeCheckingMode                 = "standard"
pythonVersion                    = "3.10"
reportIncompatibleMethodOverride = false
